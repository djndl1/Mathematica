#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
% Added by lyx2lyx
\renewcommand{\textendash}{--}
\renewcommand{\textemdash}{---}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams-bytype
theorems-ams-extended-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Divisibility and Modular Arithmetic
\end_layout

\begin_layout Definition
Division
\end_layout

\begin_layout Definition
If 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are integers with 
\begin_inset Formula $a\neq0$
\end_inset

, we say that 
\begin_inset Formula $a$
\end_inset

 divides 
\begin_inset Formula $b$
\end_inset

 if there is an integer 
\begin_inset Formula $c$
\end_inset

 s.t.
 
\begin_inset Formula $b=ac$
\end_inset

 or equivalently, if 
\begin_inset Formula $\frac{b}{a}$
\end_inset

 is an integer.
 When 
\begin_inset Formula $a$
\end_inset

 divides 
\begin_inset Formula $b$
\end_inset

, we say that 
\begin_inset Formula $a$
\end_inset

 is a 
\emph on
factor
\emph default
 or 
\emph on
divisor
\emph default
 of 
\begin_inset Formula $b$
\end_inset

 and that 
\begin_inset Formula $b$
\end_inset

 is a 
\emph on
multiple
\emph default
 of 
\begin_inset Formula $a$
\end_inset

.
 The notation 
\begin_inset Formula $a|b$
\end_inset

 denotes that 
\begin_inset Formula $a$
\end_inset

 divides 
\begin_inset Formula $b$
\end_inset

, 
\begin_inset Formula $a\nmid b$
\end_inset

 denotes 
\begin_inset Formula $a$
\end_inset

 does not 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $a,b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 be integers, where 
\begin_inset Formula $a\neq0$
\end_inset

.
 then
\end_layout

\begin_layout Theorem
1.
 if 
\begin_inset Formula $a|b$
\end_inset

 and 
\begin_inset Formula $a|c$
\end_inset

, then 
\begin_inset Formula $a|\left(b+c\right)$
\end_inset

 ;
\end_layout

\begin_layout Theorem
2.
 if 
\begin_inset Formula $a|b$
\end_inset

 then 
\begin_inset Formula $a|bc$
\end_inset

 for all integers 
\begin_inset Formula $c$
\end_inset

;
\end_layout

\begin_layout Theorem
3.
 if 
\begin_inset Formula $a|b$
\end_inset

 and 
\begin_inset Formula $b|c$
\end_inset

, then 
\begin_inset Formula $a|c$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
If 
\begin_inset Formula $a,b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are integers, where 
\begin_inset Formula $a\neq0$
\end_inset

 s.t.
 
\begin_inset Formula $a|b$
\end_inset

 and 
\begin_inset Formula $a|c$
\end_inset

, then 
\begin_inset Formula $a|mb+nc$
\end_inset

 whenever 
\begin_inset Formula $m$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

 are integers.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
\begin_inset CommandInset href
LatexCommand href
name "The Division Algorithm"
target "https://en.wikipedia.org/wiki/Remainder#Integer_division"

\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $a$
\end_inset

 be an integer and 
\begin_inset Formula $d$
\end_inset

 a positive integer.
 Then there are unique integers 
\begin_inset Formula $q$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 with 
\begin_inset Formula $0\leq r<d$
\end_inset

 s.t.
 
\begin_inset Formula $a=dq+r$
\end_inset

.
 In case that 
\begin_inset Formula $d$
\end_inset

 is negative, 
\begin_inset Formula $0\leq r<\left|d\right|$
\end_inset

.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
With the division algorithm, 
\begin_inset Formula $d$
\end_inset

 is called the 
\emph on
divisor
\emph default
, 
\begin_inset Formula $a$
\end_inset

 is called the 
\emph on
dividend
\emph default
, 
\begin_inset Formula $q$
\end_inset

 is called the 
\emph on
quotient
\emph default
, and 
\begin_inset Formula $r$
\end_inset

 is called the 
\emph on
remainder
\emph default
.
 
\begin_inset Formula 
\[
q=a\text{ div }d,r=a\text{ mod }d
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
If 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are integers and 
\begin_inset Formula $m$
\end_inset

 is a positive integer, then 
\begin_inset Formula $a$
\end_inset

 is 
\emph on
congruent to 
\begin_inset Formula $b$
\end_inset

 modulo 
\begin_inset Formula $m$
\end_inset

 
\emph default
if 
\begin_inset Formula $m$
\end_inset

 divides 
\begin_inset Formula $a-b$
\end_inset

, denoted by 
\begin_inset Formula 
\[
a\equiv b\left(\text{mod }m\right),
\]

\end_inset

a 
\emph on
congruence
\emph default
, and that 
\begin_inset Formula $m$
\end_inset

 is its 
\emph on
modulus
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 be integers, and let 
\begin_inset Formula $m$
\end_inset

 be a positive integer.
 Then 
\begin_inset Formula $a\equiv b\left(\text{mod }m\right)$
\end_inset

 iff 
\begin_inset Formula $a\text{ mod }m=b\text{ mod }m$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $m$
\end_inset

 be a positive integer.
 The integers 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are congruent modulo 
\begin_inset Formula $m$
\end_inset

 iff there is an integer 
\begin_inset Formula $k$
\end_inset

 s.t.
 
\begin_inset Formula $a=b+km$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Congruence Class
\end_layout

\begin_layout Definition
The set of all integers congruent to an integer 
\begin_inset Formula $a$
\end_inset

 modulo 
\begin_inset Formula $m$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Additions and multiplications preserve congruences.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:5"

\end_inset

Let 
\begin_inset Formula $m$
\end_inset

 be a positive integer.
 If 
\begin_inset Formula $a\equiv b\left(\text{mod }m\right)$
\end_inset

 and 
\begin_inset Formula $c\equiv d\left(\text{mod }m\right)$
\end_inset

, then 
\begin_inset Formula 
\[
a+c\equiv b+d\left(\text{mod }m\right)
\]

\end_inset

and
\begin_inset Formula 
\[
ac\equiv bd\left(\text{mod }m\right).
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
Let 
\begin_inset Formula $m$
\end_inset

 be a positive integer and let 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 be integers.
 Then 
\begin_inset Formula 
\[
\left(a+b\right)\text{mod }m=\left(\left(a\text{ mod }m\right)+\left(b\text{ mod }m\right)\right)\text{ mod }m
\]

\end_inset

and 
\begin_inset Formula 
\[
ab\text{ mod }m=\left(\left(a\text{ mod }m\right)\left(b\text{ mod }m\right)\right)\text{ mod }m.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Arithmetic Modulo, defined on 
\begin_inset Formula $Z_{m}$
\end_inset

, the set of nonnegative integers less than 
\begin_inset Formula $m$
\end_inset

.
\end_layout

\begin_layout Definition
addition modulo 
\begin_inset Formula $m$
\end_inset

, denoted by 
\begin_inset Formula $a+_{m}b=\left(a+b\right)\text{ mod }m$
\end_inset


\end_layout

\begin_layout Definition
multiplication modulo 
\begin_inset Formula $m$
\end_inset

, denoted by 
\begin_inset Formula $a\cdot_{m}b=\left(a\cdot b\right)\text{ mod }m$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
These two operations satisfy
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Closure
\series default
 If 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 belong to 
\begin_inset Formula $Z_{m}$
\end_inset

, then 
\begin_inset Formula $a+_{m}b$
\end_inset

 and 
\begin_inset Formula $a\cdot_{m}b$
\end_inset

 belong to 
\begin_inset Formula $Z_{m}$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Associativity
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Commutativity
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Identity
\begin_inset space ~
\end_inset

elements 
\series default
0 and 1
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Additive
\begin_inset space ~
\end_inset

Inverse 
\series default
If 
\begin_inset Formula $a\neq0$
\end_inset

 belongs to 
\begin_inset Formula $Z_{m}$
\end_inset

, then 
\begin_inset Formula $m-a$
\end_inset

 is an additive inverse of 
\begin_inset Formula $a$
\end_inset

 modulo 
\begin_inset Formula $m$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

 is its own additive inverse.
\begin_inset Formula 
\[
a+_{m}\left(m-a\right)=0
\]

\end_inset

and 
\begin_inset Formula 
\[
0+_{m}0=0
\]

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\series bold
Distributivity
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Integer Representation and Algorithms
\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $b$
\end_inset

 be an integer greater than 
\begin_inset Formula $1$
\end_inset

.
 Then if 
\begin_inset Formula $n$
\end_inset

 is a positive integer, it can be expressed uniquely in the form
\begin_inset Formula 
\[
n=a_{k}b^{k}+a_{k-1}b^{k-1}+\cdots+a_{1}b+a_{0},
\]

\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is a nonnegative integer, 
\begin_inset Formula $a_{0},a_{1},\dots,a_{k}$
\end_inset

 are nonnegative integers less than 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $a_{k}\neq0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Constructing Base 
\begin_inset Formula $b$
\end_inset

 Expansions
\end_layout

\begin_layout Description

\series bold
procedure 
\series default
base 
\begin_inset Formula $b$
\end_inset

 expansion(
\begin_inset Formula $n,b$
\end_inset

: positive integers with 
\begin_inset Formula $b>1$
\end_inset

)
\end_layout

\begin_layout Description
\begin_inset Formula $q\coloneqq n$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $k\coloneqq0$
\end_inset


\end_layout

\begin_layout Description

\series bold
while 
\begin_inset Formula $q\neq0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $a_{k}\coloneqq q\mod b$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $q\coloneqq q\text{ div }b$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $k\coloneqq k+1$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
return 
\begin_inset Formula $\left(a_{k-1},\dots,a_{1},a_{0}\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Addition of Integers
\end_layout

\begin_layout Description
procedure add(
\begin_inset Formula $a$
\end_inset

,
\begin_inset Formula $b$
\end_inset

: positive integers) {the binary expansion of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are 
\begin_inset Formula $\left(a_{n-1}a_{n-2}\dots a_{1}a_{0}\right)_{2}$
\end_inset

 and 
\begin_inset Formula $\left(b_{n-1}b_{n-2}\dots b_{1}b_{0}\right)_{2}$
\end_inset

 respectively}
\end_layout

\begin_layout Description
\begin_inset Formula $c\coloneqq0$
\end_inset


\end_layout

\begin_layout Description
for 
\begin_inset Formula $j\coloneqq0$
\end_inset

 to 
\begin_inset Formula $n-1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $d\coloneqq\lfloor\left(a_{j}+b_{j}+c\right)/2\rfloor$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $s_{j}\coloneqq a_{j}+b_{j}+c-2d$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $c\coloneqq d$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
\begin_inset Formula $s_{n}\coloneqq c$
\end_inset


\end_layout

\begin_layout Description
return 
\begin_inset Formula $\left(s_{0},s_{1},\dots,s_{n}\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Multiplication of Integers
\end_layout

\begin_layout Description
procedure multiply(
\begin_inset Formula $a,b$
\end_inset

: positive integers){the binary expansion of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are 
\begin_inset Formula $\left(a_{n-1}a_{n-2}\dots a_{1}a_{0}\right)_{2}$
\end_inset

 and 
\begin_inset Formula $\left(b_{n-1}b_{n-2}\dots b_{1}b_{0}\right)_{2}$
\end_inset

 respectively}
\end_layout

\begin_layout Description
for 
\begin_inset Formula $j\coloneqq0$
\end_inset

 to 
\begin_inset Formula $n-1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
if 
\begin_inset Formula $b_{j}=1$
\end_inset


\end_layout

\begin_layout Description
then 
\begin_inset Formula $c_{j}\coloneqq a$
\end_inset

 shifted 
\begin_inset Formula $j$
\end_inset

 places
\end_layout

\begin_layout Description
else 
\begin_inset Formula $c_{j}\coloneqq0$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
\begin_inset Formula $p\coloneqq0$
\end_inset


\end_layout

\begin_layout Description
for 
\begin_inset Formula $j\coloneqq0$
\end_inset

 to 
\begin_inset Formula $n-1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $p\coloneqq p+c_{j}$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
return 
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Computing div and mod
\end_layout

\begin_layout Description
procedure division algorithm(
\begin_inset Formula $a$
\end_inset

: integer, 
\begin_inset Formula $d$
\end_inset

: positive integer)
\end_layout

\begin_layout Description
\begin_inset Formula $q\coloneqq0$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $r\coloneqq\left|a\right|$
\end_inset


\end_layout

\begin_layout Description
while 
\begin_inset Formula $r\geq d$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $r\coloneqq r-d$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $q\coloneqq q+1$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
if 
\begin_inset Formula $a<0$
\end_inset

 and 
\begin_inset Formula $r>0$
\end_inset


\end_layout

\begin_layout Description
then
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $r\coloneqq d-r$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $q\coloneqq-\left(q+1\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
return 
\begin_inset Formula $\left(q,r\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Modular Exponentiation 
\begin_inset Formula $b^{n}\mod n$
\end_inset


\end_layout

\begin_layout Description
procedure modular exponentiation(
\begin_inset Formula $b$
\end_inset

: integer, 
\begin_inset Formula $n=\left(a_{k-1}a_{k-2}\dots a_{1}a_{0}\right)_{2}$
\end_inset

, 
\begin_inset Formula $m$
\end_inset

: positive integer)
\end_layout

\begin_layout Description
\begin_inset Formula $x\coloneqq1$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $power\coloneqq b\mod m$
\end_inset


\end_layout

\begin_layout Description
for 
\begin_inset Formula $i\coloneqq0$
\end_inset

 to 
\begin_inset Formula $k-1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
if 
\begin_inset Formula $a_{i}=1$
\end_inset


\end_layout

\begin_layout Description
then 
\begin_inset Formula $x\coloneqq\left(x\cdot power\right)\mod m$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $power\coloneqq\left(power\cdot power\right)\mod m$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
return 
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The algorithm successively finds 
\begin_inset Formula $b\mod m$
\end_inset

, 
\begin_inset Formula $b^{2}\mod m,b^{4}\mod m,\dots,b^{2^{k-1}}\mod m$
\end_inset

 and multiplies together those terms 
\begin_inset Formula $b^{2j}\mod m$
\end_inset

 where 
\begin_inset Formula $a_{j}=1$
\end_inset

, finding the remainder of the product when divided by 
\begin_inset Formula $m$
\end_inset

 after each multiplication.
\end_layout

\begin_layout LyX-Code
def modular_expo(b, n, m):
\end_layout

\begin_layout LyX-Code
    bin_rep = "{0:b}".format(n)
\end_layout

\begin_layout LyX-Code
    x = 1
\end_layout

\begin_layout LyX-Code
    power = b % m
\end_layout

\begin_layout LyX-Code
    for digit in reversed(bin_rep):
\end_layout

\begin_layout LyX-Code
        if digit == '1':
\end_layout

\begin_layout LyX-Code
            x = (x * power) % m
\end_layout

\begin_layout LyX-Code
        power = (power * power) % m
\end_layout

\begin_layout LyX-Code
    return x
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Primes and Greatest Common Divisors
\end_layout

\begin_layout Standard
One important concept based on divisibility is that of a prime number.
 Primes have become essential in modern cryptographic systems.
 Factoring and primality testing have become important in the applications
 of number theory or crytography.
\end_layout

\begin_layout Definition
Prime
\end_layout

\begin_layout Definition
An integer 
\begin_inset Formula $p$
\end_inset

 greater than 
\begin_inset Formula $1$
\end_inset

 is called 
\emph on
prime
\emph default
 if the only positive factors of 
\begin_inset Formula $p$
\end_inset

 are 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $p$
\end_inset

.
 A positive integer that is greater than 
\begin_inset Formula $1$
\end_inset

 and is not prime is called 
\emph on
composite
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
The Fundamental Theorem of Arithmetic (Prime Factorization)
\end_layout

\begin_layout Theorem
Every integer greater than 
\begin_inset Formula $1$
\end_inset

 can be written uniquely as a prime or as the product of two or more primes
 where the prime factors are written in order of nondecreasing size.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Proof
Uniqueness: Suppose there are two factorizations
\begin_inset Formula 
\[
p_{1}p_{2}\cdots p_{s}=q_{1}q_{2}\cdots q_{t}
\]

\end_inset

where 
\begin_inset Formula $p_{1}\leq p_{2}\leq\cdots p_{s}$
\end_inset

 and 
\begin_inset Formula $q_{1}\leq q_{2}\cdots\leq q_{t}$
\end_inset

.
 Remove all common primes
\begin_inset Formula 
\[
p_{i_{1}}p_{i_{2}}\cdots p_{i_{u}}=q_{j_{1}}q_{j_{2}}\cdots q_{j_{v}}.
\]

\end_inset


\end_layout

\begin_layout Proof
By 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:3"

\end_inset

, 
\begin_inset Formula $\exists i_{k}$
\end_inset

 s.t.
 
\begin_inset Formula $p_{i_{1}}|q_{i_{k}}$
\end_inset

, which means a prime divides another prime.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
It is often important to show that a given integer is prime.
\end_layout

\begin_layout Theorem
If 
\begin_inset Formula $n$
\end_inset

 is a composite integer, then 
\begin_inset Formula $n$
\end_inset

 has a prime divisor less than or equal to 
\begin_inset Formula $\sqrt{n}$
\end_inset

.
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $n$
\end_inset

 is composite, 
\begin_inset Formula $n=ab$
\end_inset

 for 
\begin_inset Formula $a\leq\sqrt{n}$
\end_inset

 or 
\begin_inset Formula $b\leq\sqrt{n}$
\end_inset

, i.e., 
\begin_inset Formula $n$
\end_inset

 has a divisor not exceeding 
\begin_inset Formula $\sqrt{n}$
\end_inset

.
 Denote this divisor as 
\begin_inset Formula $p_{0}$
\end_inset

, either 
\begin_inset Formula $p_{0}$
\end_inset

 itself is a prime or it has a prime factor less than 
\begin_inset Formula $p_{0}$
\end_inset

, that is, less than 
\begin_inset Formula $\sqrt{n}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
This theorem leads to a brute-force algorithm known as 
\series bold
trial division
\series default
, that is, dividing 
\begin_inset Formula $n$
\end_inset

 by all primes not exceeding 
\begin_inset Formula $\sqrt{n}$
\end_inset

 and conclude that 
\begin_inset Formula $n$
\end_inset

 is prime is it is not divisible by any of these primes.
\end_layout

\begin_layout LyX-Code
def is_prime(n):
\end_layout

\begin_layout LyX-Code
    if n <= 3:
\end_layout

\begin_layout LyX-Code
        return n > 1
\end_layout

\begin_layout LyX-Code
    if n % 2 == 0 or n % 3 == 0:
\end_layout

\begin_layout LyX-Code
        return False
\end_layout

\begin_layout LyX-Code
    i = 5
\end_layout

\begin_layout LyX-Code
    while i * i < n:
\end_layout

\begin_layout LyX-Code
        if n % i == 0 or n % (i + 2) == 0:
\end_layout

\begin_layout LyX-Code
            return False
\end_layout

\begin_layout LyX-Code
        i += 6
\end_layout

\begin_layout LyX-Code
    return True
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
The 
\emph on
sieve of Eratosthenes
\emph default
 is used to find all primes not exceeding a specified positive integer 
\begin_inset Formula $n$
\end_inset

 .
 Suppose we know all primes not exceeding 
\begin_inset Formula $\sqrt{n}$
\end_inset

, then any prime not exceeding 
\begin_inset Formula $n$
\end_inset

 is cannot be divided by any of these primes.
 All integers other than 
\begin_inset Formula $\left\{ n|p\text{ div }n,p\text{ is a prime not exceeding \sqrt{n}}\right\} $
\end_inset

 are primes.
\end_layout

\begin_layout Theorem
There are infinitely many primes.
\end_layout

\begin_layout Proof
Suppose there only a finite number of primes 
\begin_inset Formula $p_{1},p_{2},\dots,p_{n}$
\end_inset

.
 
\begin_inset Formula 
\[
Q=p_{1}p_{2}\cdots p_{n}+1.
\]

\end_inset


\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $Q$
\end_inset

 is not prime, then it is the product of two or more primes.
 Then there exists a prime 
\begin_inset Formula $p_{i}$
\end_inset

 that divides 
\begin_inset Formula $Q$
\end_inset

, then 
\begin_inset Formula $p_{i}$
\end_inset

 divides 
\begin_inset Formula $Q-p_{1}p_{2}\cdots p_{n}$
\end_inset

, which is 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Mersenne Primes
\end_layout

\begin_layout Definition
Primes in the form of 
\begin_inset Formula $2^{p}-1$
\end_inset

 where 
\begin_inset Formula $p$
\end_inset

 is a prime.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
The Prime Number Theorem
\end_layout

\begin_layout Theorem
The ratio of the number of primes not exceeding 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $x/\ln x$
\end_inset

 approaches 
\begin_inset Formula $1$
\end_inset

 as 
\begin_inset Formula $x$
\end_inset

 grows without bound.
\end_layout

\begin_layout Theorem
\begin_inset Formula 
\[
\lim_{x\to\infty}\frac{\pi\left(x\right)}{\left[\frac{x}{\ln x}\right]}=1.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark*
We can use the prime number theorem to estimate the odds that a randomly
 chosen number is prime.The number of primes not exceeding 
\begin_inset Formula $x$
\end_inset

 can be approximated by 
\begin_inset Formula $x/\ln x$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
Every arithmetic progressions 
\begin_inset Formula $ak+b,k=1,2,\dots,$
\end_inset

 contains infinitely many primes.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Conjecture
Goldbach's Conjecture
\end_layout

\begin_layout Conjecture
Every even integer 
\begin_inset Formula $n$
\end_inset

, 
\begin_inset Formula $n>2$
\end_inset

, is the sum of two primes.
\end_layout

\begin_layout Remark*
Most mathematicians believe this conjecture is true.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Conjecture
The Twin Prime (pairs of primes that differ by 
\begin_inset Formula $2$
\end_inset

) Conjecture
\end_layout

\begin_layout Conjecture
There are infinitely many twin primes.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Least Common Multiple
\end_layout

\begin_layout Definition
The 
\emph on
least common multiple 
\emph default
of the positive integers 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 is the smallest positive integer that is divisible by both 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, denoted by 
\begin_inset Formula $\text{lcm}\left(a,b\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Greatest Common Divisor
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 be integers, not both zero,.
 The largest integer 
\begin_inset Formula $d$
\end_inset

 s.t.
 
\begin_inset Formula $d|a$
\end_inset

 and 
\begin_inset Formula $d|b$
\end_inset

 is called the 
\emph on
greatest common divisor 
\emph default
of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, denoted by 
\begin_inset Formula $\gcd\left(a,b\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
The integer 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are 
\emph on
relatively prime 
\emph default
if their greatest common divisor is 
\begin_inset Formula $1$
\end_inset

.
 The integer5s 
\begin_inset Formula $a_{1},a_{2},\dots,a_{n}$
\end_inset

 are 
\emph on
pairwise relatively prime 
\emph default
if 
\begin_inset Formula $\gcd\left(a_{i},a_{j}\right)=1$
\end_inset

 whenever 
\begin_inset Formula $1\leq i<j\leq n$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
One way to find the GCD of two integers is to use the prime factorization:
 Suppose that the prime factorization of two integers 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are 
\begin_inset Formula 
\[
a=p_{1}^{a_{1}}p_{2}^{a_{2}}\cdots p_{n}^{a_{n}}\quad b=p_{1}^{b_{1}}p_{2}^{b_{2}}\cdots p_{n}^{b_{n}},
\]

\end_inset

where each exponent is a nonnegative integer and where all primes occuring
 in the prime factorization of either 
\begin_inset Formula $a$
\end_inset

 or 
\begin_inset Formula $b$
\end_inset

 are included in both factorization, with zero exponents if necessary.
 Then
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\gcd\left(a,b\right)=p_{1}^{\min\left(a_{1},b_{1}\right)}p_{2}^{\min\left(a_{2},b_{2}\right)}\cdots p_{n}^{\min\left(a_{n},b_{n}\right)}.
\]

\end_inset


\end_layout

\begin_layout Standard
Prime factorizations can also be used to find the least common multiple
 of two integers:
\begin_inset Formula 
\[
\text{lcm}\left(a,b\right)=p_{1}^{\max\left(a_{1},b_{1}\right)}p_{2}^{\max\left(a_{2},b_{2}\right)}\cdots p_{n}^{\max\left(a_{n},b_{n}\right)}.
\]

\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 be positive integers.
 Then 
\begin_inset Formula 
\[
ab=\gcd\left(a,b\right)\text{lcm}\left(a,b\right).
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Computing the GCD of two integers directly from the prime factorization
 is inefficient.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $a=bq+r$
\end_inset

 where 
\begin_inset Formula $a,b,q$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 are integers.
 Then 
\begin_inset Formula $\gcd\left(a,b\right)=\gcd\left(b,r\right)$
\end_inset

.
\end_layout

\begin_layout Proof
It's easy to show that any divisor of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 is a divisor of 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 and vice versa.
 That is 
\begin_inset Formula 
\[
\left\{ x|x|a\text{ and }x|b\right\} =\left\{ y|y|r\text{ and }y|r\right\} .
\]

\end_inset

Obviously, 
\begin_inset Formula $\gcd\left(a,b\right)=\gcd\left(b,r\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
The Euclidean Algorithm
\end_layout

\begin_layout Description
procedure gcd(a,b: positive integers)
\end_layout

\begin_layout Description
\begin_inset Formula $x\coloneqq a$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $y\coloneqq b$
\end_inset


\end_layout

\begin_layout Description
while 
\begin_inset Formula $y\neq0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $r\coloneqq x\mod y$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $x\coloneqq y$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $y\coloneqq r$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
return 
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
def gcd(a, b):
\end_layout

\begin_layout LyX-Code
    (x, y) = (a, b) if a > b else (b, a)
\end_layout

\begin_layout LyX-Code
    while y != 0:
\end_layout

\begin_layout LyX-Code
        _ , r = divmod(x, y)
\end_layout

\begin_layout LyX-Code
        x, y = y, r
\end_layout

\begin_layout LyX-Code
    return x
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\gcd\left(a,b\right)$
\end_inset

 can be expressed as a 
\series bold
linear combination
\series default
 with integer coefficient of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\begin_layout Theorem
If 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are positive integers, then there exist integers 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

 such that 
\begin_inset Formula $gcd\left(a,b\right)=sa+tb$
\end_inset

.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Definition
Bezout coefficients, Bezout
\end_layout

\begin_layout Definition
If 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are positive integers, t hen integer 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

 such that 
\begin_inset Formula $\gcd\left(a,b\right)=sa+tb$
\end_inset

 are called Bezout coefficients of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
 Also, the equation 
\begin_inset Formula $\gcd\left(a,b\right)=sa+tb$
\end_inset

 is called Bezout identity.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark*
The coefficients can be obtained by working the Euclidean algorithm forward
 and then backward.
\end_layout

\begin_layout Lemma
If 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are positive integers such that 
\begin_inset Formula $\gcd\left(a,b\right)=1$
\end_inset

 and 
\begin_inset Formula $a|bc$
\end_inset

, then 
\begin_inset Formula $a|c$
\end_inset

.
\end_layout

\begin_layout Proof
There exists integers 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

 s.t.
 
\begin_inset Formula 
\[
sa+tb=1
\]

\end_inset

then
\begin_inset Formula 
\begin{align*}
csa+ctb & =c\\
csa+taq & =c
\end{align*}

\end_inset

i.e.
\begin_inset Formula 
\[
c=\left(cs+tq\right)a
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:3"

\end_inset

If 
\begin_inset Formula $p$
\end_inset

 is prime and 
\begin_inset Formula $p|a_{1}a_{2}\cdots a_{n}$
\end_inset

, where each 
\begin_inset Formula $a_{i}$
\end_inset

 is an integer, then 
\begin_inset Formula $p|a_{i}$
\end_inset

 for some 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $m$
\end_inset

 be a positive integer and let 
\begin_inset Formula $a,b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 be integers.
 If 
\begin_inset Formula $ac\equiv bc\left(\text{ mod }m\right)$
\end_inset

 and 
\begin_inset Formula $\gcd\left(c,m\right)=1$
\end_inset

, then 
\begin_inset Formula $a\equiv b\left(\text{ mod }m\right)$
\end_inset

.
\end_layout

\begin_layout Remark*
Look back at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:5"

\end_inset


\end_layout

\end_body
\end_document
